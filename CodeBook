With a script(run_analysis.R), I convert the original dataset to a cleaned dataset in 5 steps:

1)I downloaded dataset:
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileURL, destfile = "./data/dataset.zip")
unzip("./data/dataset.zip")

2)I import in R tables with data:
features <- read.table("./UCI HAR Dataset/features.txt", col.names = c("number", "feature"))
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt",col.names = c("number", "activity"))
xTest <- read.table("./UCI HAR Dataset/test/X_test.txt", col.names = features$feature)
yTest <- read.table("./UCI HAR Dataset/test/y_test.txt",col.names = "activity_number")
xTrain <- read.table("./UCI HAR Dataset/train/X_train.txt", col.names = features$feature)
yTrain <- read.table("./UCI HAR Dataset/train/y_train.txt", col.names = "activity_number")
subjectTest <- read.table("./UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
subjectTrain <- read.table("./UCI HAR Dataset/train/subject_train.txt", col.names = "subject")

3)I merge the training and the test sets to create one data set:
X <- rbind(xTest, xTrain)
Y <- rbind(yTest, yTrain)
subject <- rbind(subjectTest, subjectTrain)
mergeData <- cbind(subject, X, Y)

4)I extract only the measurements on the mean and standard deviation for each measurement:
vector_mean <- grep("mean", names(mergeData))  ## choose only numbers of names, which includes "mean"
vector_std <- grep("std", names(mergeData))   ## choose only numbers of names, which includes "std"
vector_all <- c(1, 563, vector_mean, vector_std)  
newData <- mergeData[,vector_all]

5)I renamed the columns to be more clear:
newData$activity_number <- activity_labels[newData$activity_number, 2]
names(newData)[2] = "activity"
names(newData)<-gsub("Acc", "Accelerometer", names(newData))
names(newData)<-gsub("Gyro", "Gyroscope", names(newData))
names(newData)<-gsub("BodyBody", "Body", names(newData))
names(newData)<-gsub("Mag", "Magnitude", names(newData))
names(newData)<-gsub("^t", "Time", names(newData))
names(newData)<-gsub("^f", "Frequency", names(newData))
names(newData)<-gsub("tBody", "TimeBody", names(newData))
names(newData)<-gsub("-mean()", "Mean", names(newData), ignore.case = TRUE)
names(newData)<-gsub("-std()", "STD", names(newData), ignore.case = TRUE)
names(newData)<-gsub("-freq()", "Frequency", names(newData), ignore.case = TRUE)

6)From the data set in step 4, I create a second, independent tidy data set with the average of each variable for each activity and each subject:
tidyData <- newData %>%
        group_by(subject, activity) %>%
        summarise_all(funs(mean))
write.table(tidyData, "tidyData.txt", row.name=FALSE)
